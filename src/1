 React.useEffect(() => {
      if (window.location.search){
         const params = qs.parse(window.location.search.substring(1))
         const sortFind = sortArr.find((obj) => obj.sortProperty === params.sortProperty)
            dispatch(setFilters({ ...params, sortFind }),
         )
         isSearch.current = true
      }
   },[])

   React.useEffect(()=>{
      window.scrollTo(0.0)

   }, [categoriesId, sortIndex.sortProperty, searchValue, pageCount])


//получение пицц
   React.useEffect(() => {
      async function generalData() {
         try {
            setIsLoading(true)
            const order = sortIndex.sortProperty.includes('-') ? 'asc' : 'desc'
            const sorty = sortIndex.sortProperty.replace('-', '')
            const category = categoriesId > 0 ? `category=${categoriesId}` : ''
            const search = searchValue ? `&search=${searchValue}` : ''
            const { data } = await axios.get(`https://62cbce7d8042b16aa7c2c215.mockapi.io/items?page=${pageCount}&limit=4&${category}&sortBy=${sorty}&order=${order}${search}`)

            setPizzaItems(data)
            setIsLoading(false)
         } catch (error) {
            console.log(error)
            alert('Не удалось выгрузить данные с сервера')
         }
      }
      generalData()
      // window.scrollTo(0, 0)
   }, [categoriesId, sortIndex.sortProperty, searchValue, pageCount])


   React.useEffect(()=>{
      const queryString = qs.stringify({
         sortProperty: sortIndex.sortProperty,
         categoriesId,
         pageCount
      })
   navigate(`?${queryString}`)
      // console.log(queryString)
   }, [categoriesId, sortIndex.sortProperty, pageCount])

